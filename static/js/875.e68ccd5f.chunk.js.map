{"version":3,"file":"static/js/875.e68ccd5f.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/filter/filter-selectors.js","redux/contacts/contacts-selectors.js","components/ContactsListItem/ContactsListItem.styled.js","components/ContactsListItem/ContactsListItem.js","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/ContactsBook/ContactsBook.styled.js","pages/ContactsBook/ContactsBook.js"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","export const selectFilter = state => state.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from '../filter/filter-selectors';\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsContactsFetching = state =>\n  state.contacts.isLoading.fetchContacts;\n\nexport const selectIsContactAdded = state =>\n  state.contacts.isLoading.addContact;\n\nexport const selectIsContactDeleted = state =>\n  state.contacts.isLoading.deleteContact;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const loweredFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(loweredFilter)\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  width: calc((100% - 66px) / 3);\n  font-size: 18px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n\n  border: 1px solid gray;\n  padding: 15px 5px;\n  border-radius: 4px;\n`;\n\nexport const Button = styled.button`\n  position: relative;\n  min-width: 70px;\n`;\n\nexport const Name = styled.span``;\n\nexport const Number = styled.a`\n  font-weight: 700;\n  cursor: pointer;\n  padding: 0;\n\n  color: black;\n\n  transition: color 150ms linear;\n\n  :hover {\n    color: tomato;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { ListItem, Button, Name, Number } from './ContactsListItem.styled';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport { toast } from 'react-toastify';\n\nconst ContactsListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(false);\n\n  return (\n    <ListItem>\n      <Name>{name}</Name>\n      <Number href={`tel:${number}`}>{number}</Number>\n      <Button\n        onClick={() => {\n          dispatch(deleteContact(id));\n          setIsLoading(true);\n          toast.success(`${name} has been removed from contacts`);\n        }}\n        disabled={isLoading}\n      >\n        {isLoading ? 'Loading' : 'Delete'}\n      </Button>\n    </ListItem>\n  );\n};\n\nexport default ContactsListItem;\n","import styled from '@emotion/styled';\n\nexport const ContactsListEl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n\n  gap: 15px;\n`;\n","// react\nimport { useEffect } from 'react';\n\n// redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport {\n  selectFilteredContacts,\n  selectIsContactsFetching,\n} from 'redux/contacts/contacts-selectors';\n\n// components\nimport Spinner from '../Spinner';\nimport ContactsListItem from '../ContactsListItem';\n\n// styles\nimport { ContactsListEl } from './ContactsList.styled';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsContactsFetching);\n\n  return (\n    <ContactsListEl>\n      {isLoading ? (\n        <Spinner width={80} height={80} styles={{ margin: '0 auto' }} />\n      ) : (\n        contacts.map(({ name, number, id }) => (\n          <ContactsListItem key={id} name={name} number={number} id={id} />\n        ))\n      )}\n    </ContactsListEl>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormEl = styled(Form)`\n  padding: 15px;\n  margin: 0 auto 15px;\n  width: 350px;\n\n  background-color: lightgray;\n  border: 1px solid grey;\n  border-radius: 4px;\n`;\n\nexport const Input = styled(Field)`\n  height: 30px;\n  font-size: 16px;\n\n  border-radius: 5px;\n  border: 1px solid grey;\n`;\n\nexport const ErrorMessageEl = styled(ErrorMessage)`\n  color: red !important;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n\n  margin-bottom: 15px;\n`;\n\nexport const Button = styled.button`\n  position: relative;\n  font-size: 16px;\n\n  width: 150px;\n  height: 40px;\n\n  display: block;\n  margin: 0 auto;\n\n  color: white;\n  background-color: tomato;\n\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.15);\n  opacity: 1;\n  transition: opacity 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    opacity: 0.8;\n    transition: opacity 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n","// formik\nimport { Formik } from 'formik';\nimport { object, string, number } from 'yup';\n\n// redux\nimport {\n  selectContacts,\n  selectIsContactAdded,\n} from 'redux/contacts/contacts-selectors';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// styles\nimport {\n  FormEl,\n  Label,\n  Input,\n  Button,\n  ErrorMessageEl,\n} from './ContactForm.styled';\nimport Spinner from 'components/Spinner';\n\nimport { toast } from 'react-toastify';\n\nconst schema = object({\n  name: string().required(),\n  number: number('please write a number').required(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsContactAdded);\n  const dispatch = useDispatch();\n\n  const onFormSubmit = (values, { resetForm }) => {\n    const loweredName = values.name.toLowerCase();\n\n    contacts.find(contact => contact.name.toLowerCase() === loweredName)\n      ? toast.error(`${values.name} is already in contacts`)\n      : dispatch(addContact(values)) &&\n        toast.success(`${values.name} has been added to your contacts`) &&\n        resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={onFormSubmit}\n      >\n        <FormEl>\n          <Label>\n            Name\n            <Input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n            <ErrorMessageEl name=\"name\" component=\"div\" />\n          </Label>\n          <Label>\n            Number\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n            <ErrorMessageEl name=\"number\" component=\"div\" />\n          </Label>\n          <Button type=\"submit\" disabled={isLoading}>\n            add contact\n            {isLoading && (\n              <Spinner\n                width={20}\n                height={20}\n                color=\"#3b5998\"\n                styles={{\n                  position: 'absolute',\n                  top: '50%',\n                  marginTop: -10,\n                  right: 6,\n                }}\n              />\n            )}\n          </Button>\n        </FormEl>\n      </Formik>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  gap: 5px;\n  margin-bottom: 15px;\n`;\n\nexport const Input = styled.input`\n  font-size: 16px;\n  outline: none;\n  font-weight: 500;\n\n  border: 1px solid gray;\n  width: 350px;\n  padding: 11px;\n  border-radius: 4px;\n`;\n","// react\nimport { useSelector, useDispatch } from 'react-redux';\n// redux\nimport { changeFilter } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/filter/filter-selectors';\n// styles\nimport { Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => dispatch(changeFilter(e.target.value));\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        placeholder=\"Find\"\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleChange}\n        value={filter}\n      />\n    </Label>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactsBookEl = styled.div``;\n\nexport const ContactsTitle = styled.h2`\n  text-align: center;\n  font-size: 34px;\n  margin-bottom: 20px;\n`;\n","// Components\nimport { ContactsList } from 'components/ContactsList';\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\n\nimport { ContactsBookEl, ContactsTitle } from './ContactsBook.styled';\n\nconst ContactsBook = () => {\n  return (\n    <ContactsBookEl>\n      <ContactForm />\n\n      <ContactsTitle>Contacts</ContactsTitle>\n      <Filter />\n      <ContactsList />\n    </ContactsBookEl>\n  );\n};\n\nexport default ContactsBook;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectFilter","state","filter","selectContacts","contacts","selectIsContactsFetching","isLoading","fetchContacts","selectIsContactAdded","addContact","selectFilteredContacts","loweredFilter","toLowerCase","contact","includes","ListItem","styled","Button","Name","Number","id","number","dispatch","useDispatch","useState","setIsLoading","href","onClick","deleteContact","toast","disabled","ContactsListEl","ContactsList","useEffect","useSelector","Spinner","width","height","styles","margin","FormEl","Form","Input","Field","ErrorMessageEl","ErrorMessage","Label","schema","object","string","required","initialValues","ContactForm","validationSchema","onSubmit","values","resetForm","loweredName","type","pattern","title","component","color","position","top","marginTop","right","Filter","placeholder","onChange","e","changeFilter","target","ContactsBookEl","ContactsTitle"],"sourceRoot":""}