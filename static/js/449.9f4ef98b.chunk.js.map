{"version":3,"file":"static/js/449.9f4ef98b.chunk.js","mappings":"iQAEaA,EAAWC,EAAAA,EAAAA,GAAH,gF,SCCRC,EAAU,WACrB,OACE,UAACF,EAAD,YACE,yBACE,SAAC,KAAD,CAASG,GAAG,SAAZ,SAAqB,eAEvB,yBACE,SAAC,KAAD,CAASA,GAAG,QAAZ,SAAoB,eAI3B,E,UCZYC,EAAYH,EAAAA,EAAAA,IAAH,gFAMTI,EAAiBJ,EAAAA,EAAAA,EAAH,6CAIdK,EAAOL,EAAAA,EAAAA,KAAH,6CCLJM,EAAW,WACtB,IAAMC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACR,EAAD,YACE,UAACC,EAAD,WAAgB,aACL,SAACC,EAAD,UAAOE,IAAY,QAE9B,mBAAQK,QAAS,kBAAMF,GAASG,EAAAA,EAAAA,MAAf,EAAjB,SAA2C,aAGhD,EChBYC,EAAUd,EAAAA,EAAAA,GAAH,gFAMPe,GAAaf,EAAAA,EAAAA,GAAOgB,EAAAA,GAAPhB,CAAH,sECLViB,EAAa,WACxB,IAAMC,GAAaV,EAAAA,EAAAA,IAAYW,EAAAA,IAE/B,OACE,0BACE,UAACL,EAAD,YACE,yBACE,SAACC,EAAD,CAAYb,GAAG,KAAf,SAAoB,WAErBgB,IACC,yBACE,SAACH,EAAD,CAAYb,GAAG,YAAf,SAA2B,mBAMtC,ECnBYkB,EAASpB,EAAAA,EAAAA,OAAH,yICuBnB,EAde,WACb,IAAMkB,GAAaV,EAAAA,EAAAA,IAAYW,EAAAA,IAE/B,OACE,iCACE,UAACC,EAAD,YACE,SAACH,EAAD,IACCC,GAAa,SAACZ,EAAD,KAAe,SAACL,EAAD,QAE/B,SAAC,KAAD,MAGL,C","sources":["components/AuthNav/AuthNav.styled.js","components/AuthNav/AuthNav.js","components/UserMenu/UserMenu.styled.js","components/UserMenu/UserMenu.js","components/Navigation/Navigation.styled.js","components/Navigation/Navigation.js","components/AppBar/AppBar.styled.js","components/AppBar/AppBar.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const AuthList = styled.ul`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n`;\n","import { NavLink } from 'react-router-dom';\nimport { AuthList } from './AuthNav.styled';\n\nexport const AuthNav = () => {\n  return (\n    <AuthList>\n      <li>\n        <NavLink to=\"signup\">Sign up</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"login\">Log in</NavLink>\n      </li>\n    </AuthList>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const WelcomeMessage = styled.p`\n  margin-bottom: 0;\n`;\n\nexport const Name = styled.span`\n  font-weight: 700;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectName } from 'redux/auth/auth-selectors';\n\nimport { logout } from 'redux/auth/auth-operations';\n\nimport { Container, WelcomeMessage, Name } from './UserMenu.styled';\n\nexport const UserMenu = () => {\n  const name = useSelector(selectName);\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <WelcomeMessage>\n        Welcome, <Name>{name}</Name>!\n      </WelcomeMessage>\n      <button onClick={() => dispatch(logout())}>Logout</button>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavList = styled.ul`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  padding: 20px 0;\n  display: inline-block;\n`;\n","import { NavList, StyledLink } from './Navigation.styled';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/auth/auth-selectors';\n\nexport const Navigation = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  return (\n    <nav>\n      <NavList>\n        <li>\n          <StyledLink to=\"/ \">Home</StyledLink>\n        </li>\n        {isLoggedIn && (\n          <li>\n            <StyledLink to=\"/contacts\">Contacts</StyledLink>\n          </li>\n        )}\n      </NavList>\n    </nav>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n\n  border-bottom: 1px solid grey;\n  margin-bottom: 15px;\n`;\n","import { Outlet } from 'react-router-dom';\n\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/auth/auth-selectors';\n\nimport { AuthNav } from '../AuthNav';\nimport { UserMenu } from '../UserMenu';\nimport { Navigation } from '../Navigation';\n\nimport { Header } from './AppBar.styled';\n\nconst AppBar = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  return (\n    <>\n      <Header>\n        <Navigation />\n        {isLoggedIn ? <UserMenu /> : <AuthNav />}\n      </Header>\n      <Outlet />\n    </>\n  );\n};\n\nexport default AppBar;\n"],"names":["AuthList","styled","AuthNav","to","Container","WelcomeMessage","Name","UserMenu","name","useSelector","selectName","dispatch","useDispatch","onClick","logout","NavList","StyledLink","NavLink","Navigation","isLoggedIn","selectIsLoggedIn","Header"],"sourceRoot":""}